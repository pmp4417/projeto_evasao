
import streamlit as st
import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt
from src.simulacao_dados import simular_dados
from src.modelagem import treinar_modelo
from src.intervencoes import aplicar_intervencoes
from src.configuracoes import THRESHOLD_RISCO

st.set_page_config(page_title="Previs√£o de Evas√£o", layout="centered")
st.title("üéì Previs√£o de Evas√£o Escolar com IA")

threshold = st.slider("Defina o limite de risco para interven√ß√£o:", 0.0, 1.0, THRESHOLD_RISCO)

# Simula√ß√£o de dados
st.info("Simulando dados de alunos...")
df = simular_dados(n=500)

# üîç EDA: Visualiza√ß√£o pairplot
st.subheader("üîç An√°lise Explorat√≥ria (EDA)")
st.markdown("Visualiza√ß√£o da rela√ß√£o entre frequ√™ncia, nota, participa√ß√£o e evas√£o.")
fig = sns.pairplot(df.sample(300), hue='evasao')
st.pyplot(fig)

# Treinamento e classifica√ß√£o
X = df.drop(columns='evasao')
y = df['evasao']
modelo = treinar_modelo(X, y)

df['risco_evasao'] = modelo.predict_proba(X)[:, 1]
df['nivel_risco'] = df['risco_evasao'].apply(
    lambda p: 'Baixo' if p < 0.3 else ('M√©dio' if p < 0.6 else 'Alto'))

# Aplicar interven√ß√µes
df_intervencao = aplicar_intervencoes(df)
df_intervencao['risco_evasao'] = modelo.predict_proba(df_intervencao[X.columns])[:, 1]

# Visualiza√ß√£o de comparativo
st.subheader("üìâ Comparativo de Risco: Antes vs Depois das Interven√ß√µes")
fig2, ax = plt.subplots()
sns.kdeplot(df['risco_evasao'], label='Antes', shade=True, ax=ax)
sns.kdeplot(df_intervencao['risco_evasao'], label='Depois', shade=True, ax=ax)
plt.title("Distribui√ß√£o de Risco de Evas√£o")
plt.legend()
st.pyplot(fig2)

# Impacto
impacto = (df['risco_evasao'] - df_intervencao['risco_evasao']).mean()
st.metric("Impacto estimado ap√≥s interven√ß√£o", f"{impacto:.2%}")
